<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>auth</artifactId>
        <groupId>com.learn.cloud</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <name>Auth Api</name>
    <groupId>com.learn.cloud.auth</groupId>
    <artifactId>api</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>com.learn.cloud.auth</groupId>
            <artifactId>service</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id><!--需要唯一-->
                        <phase>package</phase><!--当执行package操作时执行一下任务-->
                        <configuration>
                            <target><!--任务-->
                                <echo message="start.................................."/><!--打印-->
                                <echo message="load maven plugin ant-contrib-1.0b3"/>
                                <!--加载plugin ant-contrib的配置文件-->
                                <taskdef resource="net/sf/antcontrib/antlib.xml">
                                    <classpath><!--加载jar包,${settings.localRepository}的值是你maven settings文件中配置的本地仓库位置-->
                                        <pathelement location="${settings.localRepository}/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
                                    </classpath>
                                </taskdef>
                                <!--复制-->
                                <if>
                                    <equals arg1="${copy}" arg2="true"/><!--是否复制-->
                                    <then>
                                        <echo message="Copy war to your desired path."/>
                                        <copy todir="${localDir}" overwrite="true"><!--执行复制操作,todir的值是将要复制到的地方,overwrite是否重写-->
                                            <fileset dir="${project.build.directory}"><!--${project.build.directory}值是你的target目录-->
                                                <include name="*.war"/><!--target目录下的包-->
                                            </fileset>
                                        </copy>
                                    </then>
                                </if>
                                <!--打印-->
                                <echo message="pom type:${project.packaging}"/>
                                <echo message="target path:${project.build.directory}"/>
                                <echo message="maven local repository:${settings.localRepository}"/>
                                <echo message="if pom type equals pom,delete ant generate target and antrun folder"/>
                                <echo message="${project.build.finalName}"/>
                                <!--删除-->
                                <if><!--if 标签-->
                                    <equals arg1="${project.packaging}" arg2="pom"/> <!--判断当前pom文件的packageing是否是pom类型,-->
                                    <then><!--如果是pom类型则删除该项目下的target目录-->
                                        <echo message="delete ${project.build.directory}"/>
                                        <delete dir="${project.build.directory}"/>
                                    </then>
                                </if>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>auth</finalName>
    </build>

</project>